{"title":"FEDLAB","description":"FEDLAB 前端自媒体组织，旨在研究最新、最前沿的技术及其应用","language":"zh-CHS","link":"https://fedlab-team.github.io","pubDate":"Sun, 03 Sep 2017 09:00:00 GMT","lastBuildDate":"Sun, 03 Sep 2017 12:46:04 GMT","generator":"hexo-generator-json-feed","webMaster":"fedlab","items":[{"title":"煦涵说CSS：当组件化开发遇上自定义属性级联变量","link":"https://fedlab-team.github.io/archives/2017/09/03/css-custom-propperty/","description":"自2015年12月W3C发布自定义属性级联变量推荐性规范已经有一段时间了，今天本文首先会对自定义属性使用做一个基本的介绍，后面将主要讲述在我们日常组件开发中CSS自定义的应用。浏览器兼容性参见CSS Variables (Custom Properties) 属性定义基本语法：–: ，以“–”开头（为了和Sass/Less等预处理器变量进行区分），自定义属性名对大小写敏感，--foo 和 --FOO 会映射到不同的值。 1234567:root &#123; --btn-color: #fff;&#125;.btn &#123; color: var(--btn-color);&#125; 使用自定义属性基本语法：: var([,]);此处括号的意思是如果没有指定值，则使用值。这个扩展非常有用，比如我们做多皮肤主题时，可以使用此语法设置默认皮肤。 CSS 自定义属性遵循 CSS 级联及继承规则 定义全局变量 1234:root &#123; --global-variables: 'global-value'; --bg-color: #f0f;&#125; 定义组件局部变量 1234567891011121314.header &#123; --bg-color: #f00; height: 20px; background-color: var(--bg-color);&#125;.main &#123; /* use global variable --bg-color: #f0f */ background-color: var(--bg-color);&#125;.footer &#123; --bg-color: #00f; height: 20px; background-color: var(--bg-color);&#125; 循环依赖 示例一： 123456789:root &#123; --a: calc(var(--b) + 20px); --b: calc(var(--a) - 20px);&#125;/* box的 width 和 height 仍为初始值，自定义属性无效 */.box &#123; width: var(--a); height: var(--b);&#125; 示例二：12345678910111213141516171819202122232425&lt;style&gt; :root &#123; --font-size: 40px; &#125; .parent &#123; font-size: var(--font-size); &#125; .son &#123; --son: calc(var(--font-size) * 2); /* font-size: 80px */ font-size: var(--son); &#125; .grandson &#123; --font-size: calc(var(--son) * 2); /* font-size: 160px */ font-size: var(--font-size); &#125;&lt;/style&gt;&lt;span class=\"parent\"&gt; parent &lt;span class=\"son\"&gt; on &lt;span class=\"grandson\"&gt;grandson&lt;/span&gt; &lt;/span&gt;&lt;/span&gt; 多皮肤主题中的应用12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455&lt;style&gt; :root &#123; --default-color: #000; &#125; body &#123; margin: 0; color: #fff; &#125; .header &#123; text-align: center; background-color: var(--default-color); &#125; .main &#123; background-color: #fff; &#125; .footer &#123; position: fixed; left: 0; bottom: 0; width: 100%; background: linear-gradient(to bottom, #ccc, var(--default-color)); &#125; select &#123; width: 100px; height: 24px; font-size: 14px; line-height: 24px; color: #333; border: 1px solid #ccc; background-color: none; &#125;&lt;/style&gt;&lt;header class=\"header\"&gt; &lt;select id=\"theme-select\"&gt; &lt;option value=\"#000\" selected&gt;Black&lt;/option&gt; &lt;option value=\"#f00\"&gt;Red&lt;/option&gt; &lt;option value=\"#00f\"&gt;Blue&lt;/option&gt; &lt;/select&gt;&lt;/header&gt;&lt;section class=\"main\"&gt; Main&lt;/section&gt;&lt;footer class=\"footer\"&gt; Footer&lt;/footer&gt;&lt;script&gt; /* change theme */ document.querySelector('#theme-select').addEventListener('change', function() &#123; document.documentElement.style.setProperty(\"--default-color\", this.value); &#125;, false);&lt;/script&gt; 组件化开发中的应用开发一个 Button 组件，并使用 CSS 自定义属性。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354&lt;style&gt; .btn-groups &#123; display: flex; flex-wrap: wrap; padding: 10px 5px; background-color: #eee; &#125; .btn &#123; --btnColor: #5eb5ff; border: 1px solid var(--btnColor); color: var(--btnColor); background-color: white; padding: 10px 25px; text-decoration: none; font-family: \"Output Sans\"; font-weight: 600; border-radius: 3px; margin: 5px; transition: all .3s ease; &#125; .btn-red &#123; --btnColor: #ff6969; &#125; .btn-green &#123; --btnColor: #7ae07a; &#125; .btn-gray &#123; --btnColor: #555; &#125; .btn-purple &#123; --btnColor: #ef34ef; &#125; .btn:hover &#123; color: #fff; background-color: var(--btnColor); &#125; .btn:active &#123; opacity: .6; &#125;&lt;/style&gt;&lt;div class=\"btn-groups\"&gt; &lt;a href='javascript:void(0)' class='btn'&gt;Submit&lt;/a&gt; &lt;a href='javascript:void(0)' class='btn btn-red'&gt;Submit&lt;/a&gt; &lt;a href='javascript:void(0)' class='btn btn-green'&gt;Submit&lt;/a&gt; &lt;a href='javascript:void(0)' class='btn btn-gray'&gt;Submit&lt;/a&gt; &lt;a href='javascript:void(0)' class='btn btn-purple'&gt;Submit&lt;/a&gt;&lt;/div&gt; 浏览器检测1.CSS @supports 检测1234567@supports ( (--a: 0)) &#123; /* supported */&#125;@supports ( not (--a: 0)) &#123; /* not supported */&#125; 2.javascript检测12345678const isSupported = window.CSS &amp;&amp; window.CSS.supports &amp;&amp; window.CSS.supports('--a', 0);if (isSupported) &#123; /* supported */&#125; else &#123; /* not supported */&#125; 总结通过上面内容，我们了解了CSS自定义属性的定义、语法、检测、应用、示例及与javascript交互，同时我们也了解到 CSS 自定义属性的优点。如果你还没有使用过 CSS 自定义属性，动手get起来吧。 感谢您的阅读 EOF 作者[煦涵]2017年09月02日 下面是「FED实验室」的微信公众号二维码，欢迎扫描关注：","pubDate":"Sun, 03 Sep 2017 09:00:00 GMT","guid":"https://fedlab-team.github.io/archives/2017/09/03/css-custom-propperty/","category":"煦涵说"}]}